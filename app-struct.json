{
 "src\\app.js": "(function () {\n 'use strict';\n angular.module('app.dependencies', ['ui.router', 'ui.bootstrap', 'ngSanitize']);\n angular.module('app', ['app.dependencies', 'app.home', 'app.about']);\n angular.module('app').config(appConfig);\n angular.module('app').controller('navController', NavController);\n angular.module('app').controller('footerController', FooterController);\n function appConfig($stateProvider, $urlRouterProvider) {\n  $urlRouterProvider.otherwise('/home');\n }\n \n function NavController($scope, $state) {\n  $scope.links = ['about'];\n }\n \n function FooterController($scope, $state) {\n  $scope.message = '@Description';\n }\n})();\n",
 "src\\index.html": "<!DOCTYPE html>\n<html lang=\"en\" ng-app=\"app\">\n<head>\n <meta charset=\"utf-8\"/>\n <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"/>\n <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n <title page-title suffix=\" - @App\">@App</title>\n <!-- @if MODE='dev' -->\n <!-- include: \"type\": \"css\", \"files\": \"<%= app.vendor.css_for_include %>\" -->\n <!-- /include -->\n <link rel=\"stylesheet\" href=\"css/app.css\"/>\n <!-- @endif -->\n <!-- @if MODE='prod' -->\n <link rel=\"stylesheet\" href=\"vendor/css/vendor.full.min.css?v=<!-- @echo BUILD_TS -->\"/>\n <link rel=\"stylesheet\" href=\"css/app.full.min.css?v=<!-- @echo BUILD_TS -->\"/>\n <!-- @endif -->\n</head>\n<body class=\"ng-cloak\">\n<div class=\"container\">\n <nav class=\"navbar navbar-default navbar-accent\" ng-controller=\"navController\">\n <div class=\"navbar-header\">\n <span><a ui-sref=\"home\" class=\"navbar-brand\">@App</a></span>\n <button type=\"button\" class=\"navbar-toggle collapsed\" ng-init=\"navCollapsed = true\"\n ng-click=\"navCollapsed = !navCollapsed\"><span class=\"sr-only\">Toggle navigation</span><span\n class=\"fa fa-bars\"></span></button>\n </div>\n <div id=\"navbar\" class=\"collapse navbar-collapse\" uib-collapse=\"navCollapsed\">\n <ul class=\"nav navbar-nav\">\n <li ng-repeat=\"link in links\" ui-sref-active=\"active\"><a href=\"#\" ui-sref=\"{{link}}\">{{link | uppercase}}</a></li>\n </ul>\n </div>\n </nav>\n</div>\n<div class=\"container\" id=\"appmain\">\n <div ui-view></div>\n</div>\n<footer ng-controller=\"footerController\" class=\"container\">{{message}}</footer>\n<!-- @if MODE='dev' -->\n<!-- include: \"type\": \"js\", \"files\": \"<%= app.vendor.js_for_include %>\" -->\n<!-- /include -->\n<!-- include: \"type\": \"js\", \"files\": \"<%= app.js_for_include %>\" -->\n<!-- /include -->\n<script src=\"js/templates.js\"></script>\n<!-- @endif -->\n<!-- @if MODE='prod' -->\n<script src=\"vendor/js/vendor.full.min.js?v=<!-- @echo BUILD_TS -->\"></script>\n<script src=\"js/app.full.min.js?v=<!-- @echo BUILD_TS -->\"></script>\n<!-- @endif -->\n<script>buildTs = '<!-- @echo BUILD_TS -->';</script>\n</body>\n</html>",
 "src\\home\\home.html": "<h1>@App</h1>\n<div>{{message}}</div>",
 "src\\home\\home.controller.js": "(function () {\n 'use strict';\n angular.module('app.home').controller('homeController', HomeController);\n function HomeController($scope) {\n $scope.message = '@App page $scope.message';\n }\n})();\n",
 "src\\home\\home.service.js": "(function () {\n 'use strict';\n angular.module('app.home').factory('homeService', HomeService);\n function HomeService($http) {\n return {getMessage: getMessage};\n function getMessage() {\n return 'Service response';\n }\n }\n})();\n",
 "src\\home\\home.module.js": "(function () {\n 'use strict';\n angular.module('app.home', []);\n angular.module('app.home').config(function ($stateProvider) {\n $stateProvider.state('home', {\n url: '/home',\n templateUrl: 'home/home.html',\n controller: 'homeController',\n controllerAs: 'homeCtrl'\n });\n });\n})();\n",
 "src\\about\\about.html": "<h1>About</h1>\n<div>{{message}}</div>",
 "src\\about\\about.controller.js": "(function () {\n 'use strict';\n angular.module('app.about').controller('aboutController', AboutController);\n function AboutController($scope) {\n $scope.message = 'About page $scope.message';\n }\n})();\n",
 "src\\about\\about.service.js": "(function () {\n 'use strict';\n angular.module('app.about').factory('aboutService', AboutService);\n function AboutService($http) {\n return {getMessage: getMessage};\n function getMessage() {\n return 'Service response';\n }\n }\n})();\n",
 "src\\about\\about.module.js": "(function () {\n 'use strict';\n angular.module('app.about', []);\n angular.module('app.about').config(function ($stateProvider) {\n $stateProvider.state('about', {\n url: '/about',\n templateUrl: 'about/about.html',\n controller: 'aboutController',\n controllerAs: 'aboutCtrl'\n });\n });\n})();\n",
 "src\\service\\general.service.js": "(function () {\n 'use strict';\n angular.module('app').factory('generalService', GeneralService);\n function GeneralService($http) {\n return {getMessage: getMessage};\n function getMessage() {\n return 'Service response';\n }\n }\n})();\n",
 "src\\app.less":"html {\n  height: 100%;\n  box-sizing: border-box;\n}\n\n*,\n*:before,\n*:after {\n  box-sizing: inherit;\n}\n\nbody {\n  position: relative;\n  margin: 0;\n  padding-bottom: 6rem;\n  min-height: 100%;\n}\n\nfooter {\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  padding: 1rem;\n  background-color: #efefef;\n  text-align: center;\n}\n",
 "src\\less\\bootstrap-theme.less":"@import \"../../bower_components/bootstrap/less/bootstrap.less\";\n@bootstrap-primary: #E37325;\n@font-family-base: \"Open Sans\";\n@font-size-base: 14px;\n@brand-success: #8CC152;\n@brand-danger: #C83939;\n\n//Custom Variables\n@body-background: #f6f6f6;\n@section-div-border: #ccc;",
 "package.json": "{\n \"name\": \"@App\",\n \"version\": \"0.0.0\",\n \"description\": \"@Description\",\n \"main\": \"index.html\",\n \"author\": \"\",\n \"license\": \"\",\n \"devDependencies\": {\n \"bower\": \"1.8.0\",\n \"connect-livereload\": \"0.5.4\",\n \"grunt\": \"0.4.5\",\n \"grunt-angular-templates\": \"1.0.2\",\n \"grunt-connect-proxy\": \"0.2.0\",\n \"grunt-contrib-clean\": \"0.7.0\",\n \"grunt-contrib-concat\": \"0.5.1\",\n \"grunt-contrib-connect\": \"0.11.2\",\n \"grunt-contrib-copy\": \"0.8.2\",\n \"grunt-contrib-cssmin\": \"0.14.0\",\n \"grunt-contrib-jshint\": \"0.11.3\",\n \"grunt-contrib-less\": \"1.1.0\",\n \"grunt-contrib-uglify\": \"0.11.0\",\n \"grunt-contrib-watch\": \"0.6.1\",\n \"grunt-execute\": \"^0.2.2\",\n \"grunt-htmlhint\": \"0.9.12\",\n \"grunt-include-source\": \"0.7.1\",\n \"grunt-karma\": \"0.12.1\",\n \"grunt-ng-annotate\": \"1.0.1\",\n \"grunt-preprocess\": \"5.0.1\",\n \"htmlhint\": \"0.9.12\",\n \"jasmine-core\": \"2.4.1\",\n \"jshint\": \"2.8.0\",\n \"karma\": \"^0.13.19\",\n \"karma-coverage\": \"^1.1.1\",\n \"karma-jasmine\": \"0.3.7\",\n \"karma-phantomjs-launcher\": \"1.0.0\",\n \"load-grunt-tasks\": \"3.3.0\",\n \"phantomjs-prebuilt\": \"2.1.3\",\n \"time-grunt\": \"1.3.0\"\n }\n}\n",
 "bower.json": "{\n \"name\": \"@App\",\n \"description\": \"@Description\",\n \"main\": \"\",\n \"ignore\": [\n \"**/.*\",\n \"node_modules\",\n \"bower_components\",\n \"test\",\n \"tests\"\n ],\n \"dependencies\": {\n \"angular\": \"1.5.0\",\n \"angular-sanitize\": \"1.5.0\",\n \"angular-ui-router\": \"0.2.18\",\n \"bootstrap\": \"3.3.6\",\n \"angular-bootstrap\": \"1.2.4\",\n \"font-awesome\": \"4.5\",\n \"bower\": \"*\",\n \"install\": \"1.0.4\"\n },\n \"devDependencies\": {\n \"angular-mocks\": \"1.5.0\"\n }\n}\n",
 ".bowercc":"{\n\"directory\" : \"bower_components\"\n}",
 "Gruntfile.js": "module.exports = function (grunt) {\n 'use strict';\n require('load-grunt-tasks')(grunt);\n require('time-grunt')(grunt);\n var appConfig = {\n js: ['./app.js', './**/*.module.js', './**/*.controller.js', './**/**/*.service.js', 'service/*.js', 'service/**/*.js'],\n js_tests: ['./**/*.spec.js'],\n templates: ['*.html', './**/*.html'],\n less: './src/app.less',\n vendor: {\n js: ['bower_components/jquery/dist/jquery.min.js', 'bower_components/angular/angular.min.js', 'bower_components/bootstrap/dist/js/bootstrap.min.js', 'bower_components/angular-sanitize/angular-sanitize.min.js', 'bower_components/angular-bootstrap/ui-bootstrap-tpls.min.js', 'bower_components/angular-ui-router/release/angular-ui-router.min.js'],\n js_tests: ['bower_components/angular-mocks/angular-mocks.js'],\n css: ['bower_components/font-awesome/css/font-awesome.min.css', 'bower_components/bootstrap/dist/css/bootstrap.min.css'],\n fonts: ['bower_components/font-awesome/fonts/**']\n },\n war: ['index.html', 'css/app.full.min.css', 'images/**', 'js/app.full.min.js', 'js/app.full.min.js.map', 'js/app.full.js', 'vendor/css/vendor.full.min.css', 'vendor/js/vendor.full.min.js', 'vendor/images/**', 'vendor/fonts/**']\n };\n grunt.initConfig({\n pkg: grunt.file.readJSON('package.json'),\n app: prepareAppConfig(appConfig),\n copy: {\n vendor: {\n files: [{\n expand: true,\n flatten: true,\n src: '<%=app.vendor.js%>',\n dest: 'build/vendor/js'\n }, {expand: true, flatten: true, src: '<%=app.vendor.css%>', dest: 'build/vendor/css'}, {\n expand: true,\n flatten: true,\n src: '<%=app.vendor.fonts%>',\n dest: 'build/vendor/fonts'\n }]\n },\n app: {\n files: [{\n expand: true,\n cwd: 'src',\n src: ['index.html', 'images/**', '<%= app.templates %>', '<%= app.js %>'],\n dest: 'build'\n }]\n },\n war: {files: [{expand: true, cwd: 'build', src: '<%= app.war %>', dest: 'target/classes/static'}]}\n },\n includeSource: {\n options: {basePath: ['build'], baseUrl: '', ordering: 'top-down'},\n app: {files: {'build/index.html': 'build/index.html'}}\n },\n preprocess: {\n dev: {\n options: {\n context: {\n MODE: 'dev',\n BUILD_TS: '<%= ((new Date()).valueOf().toString()) + (Math.floor((Math.random()*1000000)+1).toString()) %>'\n }\n }, src: 'build/index.html', dest: 'build/index.html'\n },\n prod: {\n options: {\n context: {\n MODE: 'prod',\n BUILD_TS: '<%= ((new Date()).valueOf().toString()) + (Math.floor((Math.random()*1000000)+1).toString()) %>'\n }\n }, src: 'build/index.html', dest: 'build/index.html'\n }\n },\n ngtemplates: {\n app: {\n cwd: 'build',\n src: '<%= app.templates %>',\n dest: 'build/js/templates.js',\n options: {module: 'app'}\n }\n },\n ngAnnotate: {app: {src: 'build/js/app.full.js', dest: 'build/js/app.full.js'}},\n uglify: {\n options: {\n mangle: false,\n banner: '/*! <%= pkg.name %> <%= grunt.template.today(\"dd-mm-yyyy\") %> */',\n sourceMap: true,\n sourceMapName: 'build/js/app.full.min.js.map'\n }, app: {files: {'build/js/app.full.min.js': ['build/js/app.full.js']}}\n },\n cssmin: {\n options: {shorthandCompacting: false, roundingPrecision: -1},\n app: {files: {'build/css/app.full.min.css': ['build/css/app.css']}}\n },\n concat: {\n app: {src: ['<%=app.js_for_concat%>', 'build/js/templates.js'], dest: 'build/js/app.full.js'},\n vendor_js: {\n src: '<%= app.vendor.js_for_concat %>',\n dest: 'build/vendor/js/vendor.full.min.js',\n nonull: true\n },\n vendor_css: {\n src: '<%= app.vendor.css_for_concat %>',\n dest: 'build/vendor/css/vendor.full.min.css',\n nonull: true\n }\n },\n less: {\n app: {files: {'build/css/app.css': '<%= app.less %>'}},\n bootstrap: {files: {'build/vendor/css/bootstrap-theme.css': 'src/less/bootstrap-theme.less'}}\n },\n connect: {\n server: {\n options: {\n base: 'build',\n port: 9000,\n middleware: function (connect, options, defaultMiddleware) {\n return [require('grunt-connect-proxy/lib/utils').proxyRequest, require('connect-livereload')({port: 9999}), defaultMiddleware];\n }\n },\n proxies: [{context: '/api', host: 'localhost', port: 8080}, {\n context: '/actuator',\n host: 'localhost',\n port: 8080\n }]\n }\n },\n htmlhint: {\n options: {\n 'attr-lower-case': true,\n 'attr-value-not-empty': false,\n 'tag-pair': true,\n 'tag-self-close': true,\n 'tagname-lowercase': true,\n 'id-class-value': true,\n 'id-unique': true,\n 'img-alt-require': true,\n 'img-alt-not-empty': true\n }, main: {src: ['src/index.html', 'src/**/*.html']}\n },\n jshint: {\n main: {\n options: {\n 'bitwise': true,\n 'curly': true,\n 'eqeqeq': true,\n 'forin': true,\n 'freeze': true,\n 'immed': true,\n 'latedef': 'nofunc',\n 'newcap': true,\n 'noarg': true,\n 'noempty': true,\n 'nonbsp': true,\n 'nonew': true,\n 'plusplus': false,\n 'quotmark': 'single',\n 'undef': true,\n 'unused': false,\n 'strict': false,\n 'maxdepth': 5,\n 'maxstatements': 60,\n 'asi': false,\n 'boss': false,\n 'debug': false,\n 'eqnull': true,\n 'esnext': true,\n 'evil': false,\n 'expr': false,\n 'funcscope': false,\n 'globalstrict': false,\n 'iterator': false,\n 'lastsemic': false,\n 'laxbreak': false,\n 'laxcomma': false,\n 'loopfunc': true,\n 'moz': false,\n 'multistr': false,\n 'notypeof': false,\n 'proto': false,\n 'scripturl': false,\n 'shadow': false,\n 'sub': true,\n 'supernew': false,\n 'validthis': false,\n 'noyield': false,\n 'browser': true,\n 'node': true,\n 'smarttabs': true,\n 'globals': {\n 'jQuery': true,\n 'angular': true,\n 'console': true,\n '$': true,\n '_': true,\n 'moment': true,\n 'describe': true,\n 'beforeEach': true,\n 'afterEach': true,\n 'module': true,\n 'inject': true,\n 'it': true,\n 'expect': true,\n 'xdescribe': true,\n 'xit': true,\n 'spyOn': true,\n 'jasmine': true,\n 'Bloodhound': true\n }\n }, files: {src: ['src/**/*.js']}\n }\n },\n karma: {\n unit: {\n options: {\n frameworks: ['jasmine'],\n singleRun: true,\n browsers: ['PhantomJS'],\n failOnEmptyTestSuite: false,\n files: '<%=app.js_for_karma %>'\n }\n }\n },\n watch: {\n grunt: {\n files: ['Gruntfile.js'],\n options: {nospawn: true, keepalive: true, livereload: 9999},\n tasks: ['build:dev']\n },\n js: {\n files: 'src/**/*.js',\n options: {nospawn: true, livereload: 9999},\n tasks: ['jshint', 'copy:app', 'preprocess:dev', 'includeSource:app']\n },\n html: {\n files: ['src/index.html', 'src/**/*.html'],\n options: {nospawn: true, livereload: 9999},\n tasks: ['htmlhint', 'copy:app', 'ngtemplates:app', 'preprocess:dev', 'includeSource:app']\n },\n less: {\n files: ['src/*.less'],\n options: {nospawn: true, livereload: 9999},\n tasks: ['less:app', 'less:bootstrap', 'preprocess:dev', 'includeSource:app']\n }\n },\n clean: {build: 'build'}\n });\n function prepareAppConfig(appConfig) {\n function prefix(arr, prefix) {\n return arr.map(function (val) {\n return prefix + val;\n });\n }\n \n appConfig.js_for_include = appConfig.js;\n appConfig.js_for_concat = prefix(appConfig.js, 'src/');\n appConfig.js_for_karma = appConfig.vendor.js.concat(appConfig.vendor.js_tests).concat(prefix(appConfig.js, 'src/')).concat(prefix(appConfig.js_tests, 'src/'));\n appConfig.vendor.js_for_include = prefix(appConfig.vendor.js.map(function (file) {\n return file.replace(/^.*[/]/, '');\n }), 'vendor/js/');\n appConfig.vendor.js_for_concat = prefix(appConfig.vendor.js_for_include, 'build/');\n appConfig.vendor.css_for_include = prefix(appConfig.vendor.css.map(function (file) {\n return file.replace(/^.*[/]/, '');\n }), 'vendor/css/');\n appConfig.vendor.css_for_concat = prefix(appConfig.vendor.css_for_include, 'build/');\n return appConfig;\n }\n \n grunt.registerTask('build', ['htmlhint', 'jshint', 'karma:unit', 'copy:app', 'ngtemplates:app', 'concat:app', 'ngAnnotate:app', 'uglify:app', 'less:app', 'cssmin:app', 'less:bootstrap', 'copy:vendor', 'concat:vendor_js', 'concat:vendor_css', 'preprocess:prod']);\n grunt.registerTask('build:dev', ['htmlhint', 'jshint', 'karma:unit', 'copy:app', 'ngtemplates:app', 'less:app', 'less:bootstrap', 'copy:vendor', 'preprocess:dev', 'includeSource:app']);\n grunt.registerTask('serve', ['build:dev', 'configureProxies:server', 'connect', 'watch']);\n grunt.registerTask('serve:prod', ['build', 'configureProxies:server', 'connect', 'watch']);\n grunt.registerTask('war', ['build', 'copy:war']);\n grunt.registerTask('default', ['build']);\n grunt.registerTask('printConfig', function () {\n grunt.log.writeln(JSON.stringify(grunt.config(), null, 2));\n });\n};\n"
}